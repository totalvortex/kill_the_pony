// Create the canvas
var canvas = document.createElement("canvas");
var ctx = canvas.getContext("2d");
canvas.width = 640;
canvas.height = 480;
document.body.appendChild(canvas);

// Background image
var bgReady = false;
var bgImage = new Image();
bgImage.onload = function () {
	bgReady = true;
};
bgImage.src = "images/marte.jpg";

// mapa

var mapaReady = false;
var mapa = new Image();
mapa.onload = function () {
	mapaReady = true;
};
mapa.src=  "images/marte.jpg";


// Hero image
var heroReady = false;
var heroImage = new Image();
heroImage.onload = function () {
	heroReady = true;
};
var torretaready=false;
var alfa;
var torreta = new Image();
torreta.onload = function () {
	torretaready=true;
	alfa=0.0;
};
heroImage.src = "images/tronco.png";
torreta.src ="images/torreta.png";

// Monster image
var monsterReady = false;
var monsterImage = new Image();
monsterImage.onload = function () {
	monsterReady = true;
};
monsterImage.src = "images/torre0001.png";
//bullet image
var bulletReady = false;
var bulletImage = new Image();
bulletImage.onload = function () {
	bulletReady = true;
};
bulletImage.src = "images/bala.png";
// Game objects
var map ={"x" : 0, "y":0};
var hero = {
	speed: 26 // movement in pixels per second
	
};
var monster = {};
var monstersCaught = 0;

// Handle keyboard controls
var keysDown = {};

//variables varias
var rect = canvas.getBoundingClientRect(); //tama√±o del canvas
var xrad,xd,yd,mx,my,d,dir;
var up=false;
var down=false;
var left=false;
var right=false;
//bullet

var bullet = new Array();
var bala = {"x": 0, "y" : 0, "angulo" : 0, "tipo" : 0, "paso": 5, "activo" : true};


//variables del terreno

//variables del worker
var w;
//variables de red
var mensaje=" ";
var num=0;

function WebSocketTest()
{
   if ("WebSocket" in window)
   {
     // alert("WebSocket is supported by your Browser!");
      
      // Let us open a web socket
      var ws = new WebSocket("ws://localhost:8484/websockets/game");
		
      ws.onopen = function()
      {
    	  //var ms=new Array();
    	 // ms.push(map.x,map.y);
         // Web Socket is connected, send data using send()
    	//  ws.send({true,true,false,false,650,500,45,45,690,540,1,1,1,1});
        // alert("Message is sent...");
    	  
    	  ws.send(JSON.stringify({mapx: map.x, mapy: map.y, up: 0, down:0,left:0,right:0,alfa:0,dir:0}));
    	  alert("Conectado.");
    	  
      };
		
      ws.onmessage = function (evt) 
      { 
    	 
         var obj = JSON.parse(evt.data);
         var arriba=0,abajo=0,izquierda=0,derecha=0;
         map.x=obj.mapx;
         map.y=obj.mapy;
         mensaje="hola";
         // alert("Message is received:" + received_msg);
         //var msg[]={5,6};
         //var ms=new Array();
   	  	 //ms.push(map.x,map.y);
        // Web Socket is connected, send data using send()
         if(up) arriba=1;
         if(down) abajo=1;
         if(left) izquierda=1;
         if(right) derecha=1;
         ws.send(JSON.stringify({mapx: obj.mapx, mapy: obj.mapy, up:arriba, down:abajo,left:izquierda,right:derecha,alfa:0,dir:num}));
         up=false;
     	 down=false;
     	 left=false;
     	 right=false;
   	     num++;
   	     
      };
      
      ws.onerror = function(evt)
      {
       alert("Error:" +  evt.data);
      };
      ws.onclose = function()
      { 
         // websocket is closed.
         alert("Connection is closed."); 
      };
   }
   
   else
   {
      // The browser doesn't support WebSocket
      alert("WebSocket NOT supported by your Browser!");
   }
}


function getmp(canvas, evt) {
    
    return {
      x: mx= evt.clientX - rect.left,
      y: my= evt.clientY - rect.top
    };
  }

addEventListener('mousemove', function(evt) {
    var mpos = getmp(canvas, evt);
   
}, false);
addEventListener('click', function(evt) {
		
		var paso=21;
	    var alfab=Math.atan2(evt.clientX - rect.right/2,evt.clientY - rect.bottom/2);
	   	var angulo=-alfab+Math.PI/2;
	    var x=map.x+hero.x-12;
	    var y=map.y+hero.y-13;
	    var tipo=0;
	    
	    var activo=true;
	    bullet.push({"x":x,"y":y,angulo,tipo,paso,activo});
	   // alert("balas:" + bullet[1].paso);
	    ws.send(map);
    
}, false);
addEventListener("keydown", function (e) {
	keysDown[e.keyCode] = true;
	}, false);

addEventListener("keyup", function (e) {
	delete keysDown[e.keyCode];
	
}, false);



// Reset the game when the player catches a monster
var reset = function () {
	
	hero.x = canvas.width / 2;
	hero.y = canvas.height / 2;
	map.x = rect.left/2;
	map.y = rect.top/2;
	xrad = 0.002;
	// Throw the monster somewhere on the screen randomly
	monster.x = 32 + (Math.random() * (canvas.width - 64));
	monster.y = 32 + (Math.random() * (canvas.height - 64));
	
};


// Update game objects
var update = function (modifier) {
	
	if (38 in keysDown) { // Player holding up
	//	map.y -= hero.speed * modifier;
		up=true;
        // alert("Message is sent...");
	}
	if (40 in keysDown) { // Player holding down
	//	map.y += hero.speed * modifier;
		down=true;
	}
	if (37 in keysDown) { // Player holding left
	//	map.x -= hero.speed * modifier;
		left=true;
	}
	if (39 in keysDown) { // Player holding right
	//	map.x += hero.speed * modifier;
		right=true;
	}
	if (27 in keysDown) { // Player holding right
		xrad= 0.00;
	}
	if (97 in keysDown) { // Player holding right
		xrad += 0.02;
	}
	if (100 in keysDown) { // Player holding right
		xrad -= 0.02;
	}
	
	//delimitadores de terreno
	if(map.x < 0) map.x =0;
	if(map.y < 0) map.y =0; 
	if(map.x > bgImage.width-canvas.width) map.x=bgImage.width-canvas.width;
	if(map.y > bgImage.height-canvas.height) map.y=bgImage.height-canvas.height;
	
	//calculo del angulo de la torreta
	alfa=Math.atan2(my-250,mx-330);
	alfa=alfa+Math.PI/2;
	
	
	//posicion del tanque segun movimiento
	if(up && !left && !right) dir=0;
	if(up && right) dir=Math.PI/4;
	if(right && !up && !down) dir=Math.PI/2;
	if(right && down) dir=Math.PI*3/4;
	if(down && !left && !right) dir=Math.PI;
	if(down && left) dir=-Math.PI*3/4;
	if(left && !up && !down) dir=-Math.PI/2;
	if(up && left) dir=-Math.PI/4;
	
	//disparo de las balas
	
	for (var i = 0; i < bullet.length; i++) {
		if(bullet[i].activo){
			if(bullet[i].x >0 && bullet[i].x < bgImage.width && bullet[i].y >0 && bullet[i].y < bgImage.height){
				bullet[i].paso+=3;
				
			}else{
				bullet[i].activo=false;
			
			}
		}
	}
	
	
	
	
	//alfa=alfa*2*Math.PI/180;
	// Are they touching?
	/*if (
		hero.x <= (monster.x + 32)
		&& monster.x <= (hero.x + 32)
		&& hero.y <= (monster.y + 32)
		&& monster.y <= (hero.y + 32)
	) {
		++monstersCaught;
		reset();
	}
	*/
	
};

// Draw everything
var render = function () {
	if (bgReady) {//context.drawImage(img,sx,sy,swidth,sheight,x,y,width,height);
		
		//dibuja el suelo
		ctx.drawImage(bgImage, map.x, map.y, 700 ,700,0,0,700,700);
		
	}
	if (monsterReady) {
		ctx.drawImage(monsterImage, monster.x-map.x, monster.y-map.y);
	}
	if (heroReady) {
		ctx.save();
		ctx.translate(hero.x+12,hero.y+13);
		ctx.rotate(dir);
		ctx.drawImage(heroImage,-12, -13);
		ctx.restore();
		//ctx.drawImage(heroImage, hero.x, hero.y);
	}
	if (torretaready) {
		ctx.save();
		ctx.translate(hero.x-10+22,hero.y-10+22);
		ctx.rotate(alfa);
		ctx.drawImage(torreta,-22, -22);
		ctx.restore();
	}
	
	for (var i = 0; i < bullet.length; i++) {
		if(bullet[i].activo){
			
			var xb=bullet[i].x+bullet[i].paso*Math.cos(bullet[i].angulo)-map.x-rect.left/2;
			var yb=bullet[i].y+bullet[i].paso*Math.sin(bullet[i].angulo)-map.y-rect.top/2;
			if(xb>=0 && xb<=bgImage.width && yb>=0 && yb<=bgImage.height){
				ctx.drawImage(bulletImage,xb, yb);
			}
			else{
				bullet[i].activo=false;
			}
			
		}
	}
		
	ctx.save();
	
	
	
	ctx.lineWidth="1";	
	ctx.fillStyle="white";
	ctx.strokeStyle="black";
	
	ctx.rect(2,2,2+mapa.width/10,2+mapa.height/10);
	ctx.stroke(); 
	ctx.globalAlpha=0.47;
	//dibuja mapa
	ctx.drawImage(mapa, 3,3,mapa.width, mapa.height,3,3,mapa.width/10,mapa.height/10);
	ctx.restore();
	
	ctx.save();
	ctx.fillStyle="white";
	ctx.beginPath();
	var xt=(map.x+8+canvas.width/2);
	var yt=(map.y+8+canvas.height/2);
	ctx.arc(xt/10,yt/10,2,0,2*Math.PI);
	ctx.stroke();
	/*for (var i = 0; i < bullet.length; i++) {
		if(bullet[i].activo){
			ctx.fillStyle="white";
			ctx.beginPath();
			//ctx.arc(xt/10+(bullet[i].x+bullet[i].paso*Math.cos(bullet[i].angulo)-map.x-rect.left/2)/10,yt/10(bullet[i].y+bullet[i].paso*Math.sin(bullet[i].angulo)-map.y-rect.top/2)/10,1,0,2*Math.PI);
			//ctx.stroke();
		}
	}*/
	ctx.restore();
	
	// Mensaje
	ctx.fillStyle = "rgb(250, 250, 250)";
	ctx.font = "13px Helvetica";
	ctx.textAlign = "left";
	ctx.textBaseline = "top";
	ctx.fillText(mensaje  , 30, 435);
	
};




// The main game loop
var main = function () {
	var now = Date.now();
	var delta = now - then;

	update(delta / 500);
	render();
	
	then = now;

	// Request to do this again ASAP
	requestAnimationFrame(main);
};

// Cross-browser support for requestAnimationFrame
var w = window;
requestAnimationFrame = w.requestAnimationFrame || w.webkitRequestAnimationFrame || w.msRequestAnimationFrame || w.mozRequestAnimationFrame;

// Let's play this game!
var then = Date.now();
reset();
WebSocketTest();
main();
